<?xml version="1.0"?>
<robot name="dasautonomeauto" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Scale parameter (negative for reduction, positive for increase) -->
    <xacro:property name="scale_percent" value="-50"/>
    <xacro:property name="scale" value="${1.0 + scale_percent / 100.0}"/>

    <xacro:arg name="gpu" default="false"/>
    <xacro:property name="gpu" value="$(arg gpu)" />

    <!-- Add the wheels xacros -->
    <xacro:include filename="$(find niagara_model)/urdf/Autoreifen.xacro"/>
    <xacro:include filename="$(find niagara_model)/urdf/VLP-16.xacro"/>

    <!-- Base values (original) -->
    <xacro:property name="base_wheel_width" value="0.175" />
    <xacro:property name="base_clearance" value="0.15" /> <!-- 0.3/2.0 -->
    <xacro:property name="base_footprint_height" value="0.2" />
    <xacro:property name="base_mass" value="125.0" />
    <xacro:property name="base_ixx" value="1.391" />
    <xacro:property name="base_ixy" value="0.004" />
    <xacro:property name="base_ixz" value="0.0" />
    <xacro:property name="base_iyy" value="6.853" />
    <xacro:property name="base_iyz" value="0.0" />
    <xacro:property name="base_izz" value="6.125" />

    <!-- Scaled values -->
    <xacro:property name="PI" value="3.1415926535897931"/>
    <xacro:property name="wheel_width" value="${base_wheel_width * scale}" />
    <xacro:property name="clearance" value="${base_clearance * scale}" />

    <!--  BASE FOOTPRINT  -->
    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${base_footprint_height * scale}" rpy="0 0 0" />
      <parent link="base_footprint"/>
      <child link="base_link" />
    </joint>  

    <!-- BASE_LINK -->
    <link name="base_link">
        <inertial>
            <mass value="${base_mass * scale}" />
            <origin xyz="0 0 0" />
            <inertia ixx="${base_ixx * scale}" 
                     ixy="${base_ixy * scale}"  
                     ixz="${base_ixz * scale}"  
                     iyy="${base_iyy * scale}"  
                     iyz="${base_iyz * scale}"  
                     izz="${base_izz * scale}" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find niagara_model)/meshes/base_link.STL" scale="${scale} ${scale} ${scale}"/>
            </geometry>
            <material name="white">
                <color rgba="0.1 0.1 0.1 1"/>
            </material>
        </visual>  
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0 " />
            <geometry>
                <mesh filename="file://$(find niagara_model)/meshes/base_link.STL" scale="${scale} ${scale} ${scale}"/>
            </geometry>
        </collision>     
    </link>

    <xacro:VLP-16 parent="base_link" name="velodyne" topic="/points_raw" hz="10" samples="440" gpu="${gpu}"/>

    <xacro:front_wheel_to_base lr_prefix="left" fr_prefix="front" lr_reflect="1" fr_reflect="1" />
    <xacro:front_wheel_to_base lr_prefix="right" fr_prefix="front" lr_reflect="-1" fr_reflect="1" />
    <xacro:rear_wheel_to_base lr_prefix="left" fr_prefix="rear" lr_reflect="1" fr_reflect="-1" />
    <xacro:rear_wheel_to_base lr_prefix="right" fr_prefix="rear" lr_reflect="-1" fr_reflect="-1" />

    <!-- <xacro:include filename="$(find niagara_model)/urdf/zed2.xacro" /> -->
    <xacro:include filename="$(find niagara_model)/urdf/imu.xacro" />

    <!-- <xacro:include filename="$(find niagara_model)/urdf/sensors.xacro" /> -->
    <xacro:include filename="$(find niagara_model)/urdf/AckermannPlugIn.xacro" />

</robot>